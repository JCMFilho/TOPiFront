import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { OverlayModule } from '@angular/cdk/overlay';
import { NglIconsModule } from '../icons/module';
import { NglInternalOutletModule } from '../util/outlet.module';
import { NglClickOutsideModule } from '../common/clickoutside.module';
import { NglDatepicker } from './datepicker';
import { NglDatepickerInput } from './input/datepicker-input';
import { NglDatepickerInputDirective } from './input/datepicker-input.directive';
import { NglDatepickerWeekdays } from './weekdays';
import { NglDay } from './day';
import { NglDatepickerYear } from './year';
import { NglDatepickerMonth } from './month';
import { NglDateAdapter } from './adapters/date-fns-adapter';
import { NglOverlayModule } from '../common/overlay/overlay.module';
const EXPORTS = [
    NglDatepicker, NglDatepickerInput, NglDatepickerInputDirective,
];
let NglDatepickersModule = class NglDatepickersModule {
};
NglDatepickersModule = __decorate([
    NgModule({
        declarations: [...EXPORTS, NglDay, NglDatepickerWeekdays, NglDatepickerYear, NglDatepickerMonth],
        exports: EXPORTS,
        imports: [
            CommonModule,
            FormsModule,
            NglIconsModule,
            NglInternalOutletModule,
            OverlayModule,
            NglClickOutsideModule,
            NglOverlayModule,
        ],
        providers: [NglDateAdapter],
    })
], NglDatepickersModule);
export { NglDatepickersModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2RhdGVwaWNrZXJzL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM3QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUVqRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRTdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVwRSxNQUFNLE9BQU8sR0FBRztJQUNkLGFBQWEsRUFBRSxrQkFBa0IsRUFBRSwyQkFBMkI7Q0FDL0QsQ0FBQztBQWdCRixJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtDQUFHLENBQUE7QUFBdkIsb0JBQW9CO0lBZGhDLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRSxDQUFDLEdBQUcsT0FBTyxFQUFFLE1BQU0sRUFBRSxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsQ0FBQztRQUNoRyxPQUFPLEVBQUUsT0FBTztRQUNoQixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osV0FBVztZQUNYLGNBQWM7WUFDZCx1QkFBdUI7WUFDdkIsYUFBYTtZQUNiLHFCQUFxQjtZQUNyQixnQkFBZ0I7U0FDakI7UUFDRCxTQUFTLEVBQUUsQ0FBQyxjQUFjLENBQUM7S0FDNUIsQ0FBQztHQUNXLG9CQUFvQixDQUFHO1NBQXZCLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBPdmVybGF5TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xuaW1wb3J0IHsgTmdsSWNvbnNNb2R1bGUgfSBmcm9tICcuLi9pY29ucy9tb2R1bGUnO1xuaW1wb3J0IHsgTmdsSW50ZXJuYWxPdXRsZXRNb2R1bGUgfSBmcm9tICcuLi91dGlsL291dGxldC5tb2R1bGUnO1xuaW1wb3J0IHsgTmdsQ2xpY2tPdXRzaWRlTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NsaWNrb3V0c2lkZS5tb2R1bGUnO1xuXG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VyIH0gZnJvbSAnLi9kYXRlcGlja2VyJztcbmltcG9ydCB7IE5nbERhdGVwaWNrZXJJbnB1dCB9IGZyb20gJy4vaW5wdXQvZGF0ZXBpY2tlci1pbnB1dCc7XG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VySW5wdXREaXJlY3RpdmUgfSBmcm9tICcuL2lucHV0L2RhdGVwaWNrZXItaW5wdXQuZGlyZWN0aXZlJztcblxuaW1wb3J0IHsgTmdsRGF0ZXBpY2tlcldlZWtkYXlzIH0gZnJvbSAnLi93ZWVrZGF5cyc7XG5pbXBvcnQgeyBOZ2xEYXkgfSBmcm9tICcuL2RheSc7XG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VyWWVhciB9IGZyb20gJy4veWVhcic7XG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VyTW9udGggfSBmcm9tICcuL21vbnRoJztcblxuaW1wb3J0IHsgTmdsRGF0ZUFkYXB0ZXIgfSBmcm9tICcuL2FkYXB0ZXJzL2RhdGUtZm5zLWFkYXB0ZXInO1xuaW1wb3J0IHsgTmdsT3ZlcmxheU1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9vdmVybGF5L292ZXJsYXkubW9kdWxlJztcblxuY29uc3QgRVhQT1JUUyA9IFtcbiAgTmdsRGF0ZXBpY2tlciwgTmdsRGF0ZXBpY2tlcklucHV0LCBOZ2xEYXRlcGlja2VySW5wdXREaXJlY3RpdmUsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFsuLi5FWFBPUlRTLCBOZ2xEYXksIE5nbERhdGVwaWNrZXJXZWVrZGF5cywgTmdsRGF0ZXBpY2tlclllYXIsIE5nbERhdGVwaWNrZXJNb250aF0sXG4gIGV4cG9ydHM6IEVYUE9SVFMsXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgTmdsSWNvbnNNb2R1bGUsXG4gICAgTmdsSW50ZXJuYWxPdXRsZXRNb2R1bGUsXG4gICAgT3ZlcmxheU1vZHVsZSxcbiAgICBOZ2xDbGlja091dHNpZGVNb2R1bGUsXG4gICAgTmdsT3ZlcmxheU1vZHVsZSxcbiAgXSxcbiAgcHJvdmlkZXJzOiBbTmdsRGF0ZUFkYXB0ZXJdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xEYXRlcGlja2Vyc01vZHVsZSB7fVxuIl19