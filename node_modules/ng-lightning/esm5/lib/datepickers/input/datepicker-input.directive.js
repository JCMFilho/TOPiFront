import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Renderer2, HostListener, OnDestroy } from '@angular/core';
import { NglDatepickerInput } from './datepicker-input';
var NglDatepickerInputDirective = /** @class */ (function () {
    function NglDatepickerInputDirective(element, renderer, datepickerInput) {
        this.element = element;
        this.renderer = renderer;
        this.datepickerInput = datepickerInput;
        renderer.addClass(element.nativeElement, 'slds-input');
        renderer.setAttribute(element.nativeElement, 'autocomplete', 'off');
        renderer.setAttribute(element.nativeElement, 'id', this.datepickerInput.uid);
        this.datepickerInput.inputEl = this;
    }
    NglDatepickerInputDirective.prototype.onClick = function () {
        this.datepickerInput.onTriggerClick('input');
    };
    NglDatepickerInputDirective.prototype.onKeydown = function (evt) {
        this.datepickerInput.onKeyboardInput(evt);
    };
    NglDatepickerInputDirective.prototype.onInput = function () {
        var _this = this;
        setTimeout(function () { return _this.datepickerInput.onInputChange(); }, 0);
    };
    NglDatepickerInputDirective.prototype.onBlur = function () {
        this.datepickerInput.onBlur();
    };
    NglDatepickerInputDirective.prototype.setPlaceholder = function (placeholder) {
        this.renderer.setAttribute(this.element.nativeElement, 'placeholder', placeholder);
    };
    NglDatepickerInputDirective.prototype.setDisabled = function (disabled) {
        this.renderer.setProperty(this.element.nativeElement, 'disabled', disabled);
    };
    NglDatepickerInputDirective.prototype.ngOnDestroy = function () {
        this.datepickerInput.inputEl = null;
    };
    NglDatepickerInputDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: NglDatepickerInput }
    ]; };
    __decorate([
        HostListener('click'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], NglDatepickerInputDirective.prototype, "onClick", null);
    __decorate([
        HostListener('keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], NglDatepickerInputDirective.prototype, "onKeydown", null);
    __decorate([
        HostListener('input'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], NglDatepickerInputDirective.prototype, "onInput", null);
    __decorate([
        HostListener('blur'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], NglDatepickerInputDirective.prototype, "onBlur", null);
    NglDatepickerInputDirective = __decorate([
        Directive({
            selector: 'input[nglDatepickerInput]',
            exportAs: 'nglDatepickerInput'
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2,
            NglDatepickerInput])
    ], NglDatepickerInputDirective);
    return NglDatepickerInputDirective;
}());
export { NglDatepickerInputDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci1pbnB1dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1saWdodG5pbmcvIiwic291cmNlcyI6WyJsaWIvZGF0ZXBpY2tlcnMvaW5wdXQvZGF0ZXBpY2tlci1pbnB1dC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBT3hEO0lBRUUscUNBQW1CLE9BQW1CLEVBQ2xCLFFBQW1CLEVBQ25CLGVBQW1DO1FBRnBDLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFDbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixvQkFBZSxHQUFmLGVBQWUsQ0FBb0I7UUFDckQsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3ZELFFBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxjQUFjLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDcEUsUUFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN0QyxDQUFDO0lBR0QsNkNBQU8sR0FBUDtRQUNFLElBQUksQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFHRCwrQ0FBUyxHQUFULFVBQVUsR0FBRztRQUNYLElBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFHRCw2Q0FBTyxHQUFQO1FBREEsaUJBR0M7UUFEQyxVQUFVLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxFQUFFLEVBQXBDLENBQW9DLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUdELDRDQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxvREFBYyxHQUFkLFVBQWUsV0FBbUI7UUFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3JGLENBQUM7SUFFRCxpREFBVyxHQUFYLFVBQVksUUFBaUI7UUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFRCxpREFBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLENBQUM7O2dCQXZDMkIsVUFBVTtnQkFDUixTQUFTO2dCQUNGLGtCQUFrQjs7SUFRdkQ7UUFEQyxZQUFZLENBQUMsT0FBTyxDQUFDOzs7OzhEQUdyQjtJQUdEO1FBREMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDOzs7O2dFQUduQztJQUdEO1FBREMsWUFBWSxDQUFDLE9BQU8sQ0FBQzs7Ozs4REFHckI7SUFHRDtRQURDLFlBQVksQ0FBQyxNQUFNLENBQUM7Ozs7NkRBR3BCO0lBN0JVLDJCQUEyQjtRQUp2QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLFFBQVEsRUFBRSxvQkFBb0I7U0FDL0IsQ0FBQzt5Q0FHNEIsVUFBVTtZQUNSLFNBQVM7WUFDRixrQkFBa0I7T0FKNUMsMkJBQTJCLENBMEN2QztJQUFELGtDQUFDO0NBQUEsQUExQ0QsSUEwQ0M7U0ExQ1ksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIEhvc3RMaXN0ZW5lciwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VySW5wdXQgfSBmcm9tICcuL2RhdGVwaWNrZXItaW5wdXQnO1xuaW1wb3J0IHsgSURhdGVwaWNrZXJJbnB1dCB9IGZyb20gJy4vZGF0ZXBpY2tlci1pbnB1dC5pbnRlcmZhY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdpbnB1dFtuZ2xEYXRlcGlja2VySW5wdXRdJyxcbiAgZXhwb3J0QXM6ICduZ2xEYXRlcGlja2VySW5wdXQnXG59KVxuZXhwb3J0IGNsYXNzIE5nbERhdGVwaWNrZXJJbnB1dERpcmVjdGl2ZSBpbXBsZW1lbnRzIElEYXRlcGlja2VySW5wdXQsIE9uRGVzdHJveSB7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnQ6IEVsZW1lbnRSZWYsXG4gICAgICAgICAgICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICAgICAgICAgICAgcHJpdmF0ZSBkYXRlcGlja2VySW5wdXQ6IE5nbERhdGVwaWNrZXJJbnB1dCkge1xuICAgIHJlbmRlcmVyLmFkZENsYXNzKGVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3NsZHMtaW5wdXQnKTtcbiAgICByZW5kZXJlci5zZXRBdHRyaWJ1dGUoZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnYXV0b2NvbXBsZXRlJywgJ29mZicpO1xuICAgIHJlbmRlcmVyLnNldEF0dHJpYnV0ZShlbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdpZCcsIHRoaXMuZGF0ZXBpY2tlcklucHV0LnVpZCk7XG4gICAgdGhpcy5kYXRlcGlja2VySW5wdXQuaW5wdXRFbCA9IHRoaXM7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIG9uQ2xpY2soKSB7XG4gICAgdGhpcy5kYXRlcGlja2VySW5wdXQub25UcmlnZ2VyQ2xpY2soJ2lucHV0Jyk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcbiAgb25LZXlkb3duKGV2dCkge1xuICAgIHRoaXMuZGF0ZXBpY2tlcklucHV0Lm9uS2V5Ym9hcmRJbnB1dChldnQpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignaW5wdXQnKVxuICBvbklucHV0KCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5kYXRlcGlja2VySW5wdXQub25JbnB1dENoYW5nZSgpLCAwKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2JsdXInKVxuICBvbkJsdXIoKSB7XG4gICAgdGhpcy5kYXRlcGlja2VySW5wdXQub25CbHVyKCk7XG4gIH1cblxuICBzZXRQbGFjZWhvbGRlcihwbGFjZWhvbGRlcjogc3RyaW5nKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdwbGFjZWhvbGRlcicsIHBsYWNlaG9sZGVyKTtcbiAgfVxuXG4gIHNldERpc2FibGVkKGRpc2FibGVkOiBib29sZWFuKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRQcm9wZXJ0eSh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ2Rpc2FibGVkJywgZGlzYWJsZWQpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5kYXRlcGlja2VySW5wdXQuaW5wdXRFbCA9IG51bGw7XG4gIH1cbn1cbiJdfQ==