import { __decorate, __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { OverlayModule } from '@angular/cdk/overlay';
import { NglIconsModule } from '../icons/module';
import { NglInternalOutletModule } from '../util/outlet.module';
import { NglClickOutsideModule } from '../common/clickoutside.module';
import { NglDatepicker } from './datepicker';
import { NglDatepickerInput } from './input/datepicker-input';
import { NglDatepickerInputDirective } from './input/datepicker-input.directive';
import { NglDatepickerWeekdays } from './weekdays';
import { NglDay } from './day';
import { NglDatepickerYear } from './year';
import { NglDatepickerMonth } from './month';
import { NglDateAdapter } from './adapters/date-fns-adapter';
import { NglOverlayModule } from '../common/overlay/overlay.module';
var EXPORTS = [
    NglDatepicker, NglDatepickerInput, NglDatepickerInputDirective,
];
var NglDatepickersModule = /** @class */ (function () {
    function NglDatepickersModule() {
    }
    NglDatepickersModule = __decorate([
        NgModule({
            declarations: __spread(EXPORTS, [NglDay, NglDatepickerWeekdays, NglDatepickerYear, NglDatepickerMonth]),
            exports: EXPORTS,
            imports: [
                CommonModule,
                FormsModule,
                NglIconsModule,
                NglInternalOutletModule,
                OverlayModule,
                NglClickOutsideModule,
                NglOverlayModule,
            ],
            providers: [NglDateAdapter],
        })
    ], NglDatepickersModule);
    return NglDatepickersModule;
}());
export { NglDatepickersModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbGlnaHRuaW5nLyIsInNvdXJjZXMiOlsibGliL2RhdGVwaWNrZXJzL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM3QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUVqRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRTdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVwRSxJQUFNLE9BQU8sR0FBRztJQUNkLGFBQWEsRUFBRSxrQkFBa0IsRUFBRSwyQkFBMkI7Q0FDL0QsQ0FBQztBQWdCRjtJQUFBO0lBQW1DLENBQUM7SUFBdkIsb0JBQW9CO1FBZGhDLFFBQVEsQ0FBQztZQUNSLFlBQVksV0FBTSxPQUFPLEdBQUUsTUFBTSxFQUFFLHFCQUFxQixFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFDO1lBQ2hHLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLE9BQU8sRUFBRTtnQkFDUCxZQUFZO2dCQUNaLFdBQVc7Z0JBQ1gsY0FBYztnQkFDZCx1QkFBdUI7Z0JBQ3ZCLGFBQWE7Z0JBQ2IscUJBQXFCO2dCQUNyQixnQkFBZ0I7YUFDakI7WUFDRCxTQUFTLEVBQUUsQ0FBQyxjQUFjLENBQUM7U0FDNUIsQ0FBQztPQUNXLG9CQUFvQixDQUFHO0lBQUQsMkJBQUM7Q0FBQSxBQUFwQyxJQUFvQztTQUF2QixvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IE5nbEljb25zTW9kdWxlIH0gZnJvbSAnLi4vaWNvbnMvbW9kdWxlJztcbmltcG9ydCB7IE5nbEludGVybmFsT3V0bGV0TW9kdWxlIH0gZnJvbSAnLi4vdXRpbC9vdXRsZXQubW9kdWxlJztcbmltcG9ydCB7IE5nbENsaWNrT3V0c2lkZU1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jbGlja291dHNpZGUubW9kdWxlJztcblxuaW1wb3J0IHsgTmdsRGF0ZXBpY2tlciB9IGZyb20gJy4vZGF0ZXBpY2tlcic7XG5pbXBvcnQgeyBOZ2xEYXRlcGlja2VySW5wdXQgfSBmcm9tICcuL2lucHV0L2RhdGVwaWNrZXItaW5wdXQnO1xuaW1wb3J0IHsgTmdsRGF0ZXBpY2tlcklucHV0RGlyZWN0aXZlIH0gZnJvbSAnLi9pbnB1dC9kYXRlcGlja2VyLWlucHV0LmRpcmVjdGl2ZSc7XG5cbmltcG9ydCB7IE5nbERhdGVwaWNrZXJXZWVrZGF5cyB9IGZyb20gJy4vd2Vla2RheXMnO1xuaW1wb3J0IHsgTmdsRGF5IH0gZnJvbSAnLi9kYXknO1xuaW1wb3J0IHsgTmdsRGF0ZXBpY2tlclllYXIgfSBmcm9tICcuL3llYXInO1xuaW1wb3J0IHsgTmdsRGF0ZXBpY2tlck1vbnRoIH0gZnJvbSAnLi9tb250aCc7XG5cbmltcG9ydCB7IE5nbERhdGVBZGFwdGVyIH0gZnJvbSAnLi9hZGFwdGVycy9kYXRlLWZucy1hZGFwdGVyJztcbmltcG9ydCB7IE5nbE92ZXJsYXlNb2R1bGUgfSBmcm9tICcuLi9jb21tb24vb3ZlcmxheS9vdmVybGF5Lm1vZHVsZSc7XG5cbmNvbnN0IEVYUE9SVFMgPSBbXG4gIE5nbERhdGVwaWNrZXIsIE5nbERhdGVwaWNrZXJJbnB1dCwgTmdsRGF0ZXBpY2tlcklucHV0RGlyZWN0aXZlLFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbLi4uRVhQT1JUUywgTmdsRGF5LCBOZ2xEYXRlcGlja2VyV2Vla2RheXMsIE5nbERhdGVwaWNrZXJZZWFyLCBOZ2xEYXRlcGlja2VyTW9udGhdLFxuICBleHBvcnRzOiBFWFBPUlRTLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIE5nbEljb25zTW9kdWxlLFxuICAgIE5nbEludGVybmFsT3V0bGV0TW9kdWxlLFxuICAgIE92ZXJsYXlNb2R1bGUsXG4gICAgTmdsQ2xpY2tPdXRzaWRlTW9kdWxlLFxuICAgIE5nbE92ZXJsYXlNb2R1bGUsXG4gIF0sXG4gIHByb3ZpZGVyczogW05nbERhdGVBZGFwdGVyXSxcbn0pXG5leHBvcnQgY2xhc3MgTmdsRGF0ZXBpY2tlcnNNb2R1bGUge31cbiJdfQ==